
import( "Utilities.msg" );
import( "Math.flow" );

int SelectDigit()
{
    while ( true )
    {
        FUNCTION_0056( MSGDummy, Select0to4Dialog, 0 );
        int temp = FUNCTION_000D( 0 );
        if ( temp == -1 )
            break;
            
        if ( temp == 5 ) // higher
        {
            FUNCTION_0056( MSGDummy, Select5to9Dialog, 0 );
            temp = FUNCTION_000D( 0 );
            if ( temp == -1 )
                break;
                
            if ( temp == 5 ) // lower
                continue;

            return temp + 5;
        }

        return temp;
    }
    
    return -1;
}

int SelectNumber( int digitCount )
{
    int number = 0;
    
    for ( int i = 0; i < digitCount; i++ )
    {
        FUNCTION_0056( MSGDummy, Select0to9Dialog, 0 );
        int digit = FUNCTION_000D( 0 );
        
        if ( digit == -1 )
        {
            // Number should only equal negative one if we cancel
            // before entering anything.
            if ( i == 0 )
            {
                number = -1;
                break;
            }
            else
                break;
        }
        
        number *= 10;
        number += digit;
    }
    return number;
}

float SelectFloat()
{
    DisplayMessagePrompt( SelectFloatInteger );
    
    int i = 0;
    float ipart = 0;
    while ( true )
    {
        FUNCTION_0056( MSGDummy, Select0to9Dialog, 0 );
        float digit = FUNCTION_000D( 0 );
        
        if ( digit == -1 )
        {
            // Number should only equal negative one if we cancel
            // before entering anything.
            if ( i == 0 )
                return -1;
            else
                break;
        }
        
        ipart *= 10;
        ipart += digit;
        i++;
    }
    DisplayMessagePrompt( SelectFloatFractional );
    
    i = 0;
    float fpart = 0;
    while ( true )
    {
        FUNCTION_0056( MSGDummy, Select0to9Dialog, 0 );
        float digit = FUNCTION_000D( 0 );
        
        if ( digit == -1 )
            break;
        
        fpart *= 10;
        fpart += digit;
        i++;
    }
    
    fpart = fpart / Pow( 10, i );
    
    
    float number = ipart + fpart;
    return number;
}

int SelectYesNo()
{
    FUNCTION_0056( MSGDummy, SelectYesNo, 0 );
    int selection = FUNCTION_000D( 0 );
    return selection;
}

int SelectNoYes()
{
    FUNCTION_0056( MSGDummy, SelectOffOn, 0 );
    int selection = FUNCTION_000D( 0 );
    return selection;
}

int SelectOnOff()
{
    FUNCTION_0056( MSGDummy, SelectOnOff, 0 );
    int selection = FUNCTION_000D( 0 );
    return selection;
}

int SelectOffOn()
{
    FUNCTION_0056( MSGDummy, SelectOffOn, 0 );
    int selection = FUNCTION_000D( 0 );
    return selection;
}

void DisplayMessagePrompt( int messageId )
{
    MSG_WND_DSP(); 
    MSG( messageId ); 
    MSG_WND_CLS();
}

int SelectNumberPrompt( int messageId, int digits )
{
    DisplayMessagePrompt( messageId );
    int i = SelectNumber( digits );
    return i;
}

float SelectFloatPrompt( int messageId )
{
    DisplayMessagePrompt( messageId );
    float i = SelectFloat();
    return i;
}

int SelectPrompt( int promptMessageId, int selectMessageId )
{
    MSG_WND_DSP(); 
    MSG( promptMessageId );
    FUNCTION_0056( MSGDummy, selectMessageId, 0 );
    int selection = FUNCTION_000D( 0 );
    MSG_WND_CLS();
    return selection;
}

int SelectYesNoPrompt( int promptMessageId )
{
    MSG_WND_DSP(); 
    MSG( promptMessageId );
    int selection = SelectYesNo();
    MSG_WND_CLS();
    return selection;
}

int SelectNoYesPrompt( int promptMessageId )
{
    MSG_WND_DSP(); 
    MSG( promptMessageId );
    int selection = SelectNoYes();
    MSG_WND_CLS();
    return selection;
}

int SelectOnOffPrompt( int promptMessageId )
{
    MSG_WND_DSP(); 
    MSG( promptMessageId );
    int selection = SelectOnOff();
    MSG_WND_CLS();
    return selection;
}

int SelectOffOnPrompt( int promptMessageId )
{
    MSG_WND_DSP(); 
    MSG( promptMessageId );
    int selection = SelectOffOn();
    MSG_WND_CLS();
    return selection;
}